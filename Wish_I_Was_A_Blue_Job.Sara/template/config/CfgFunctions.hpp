// Functions library
// Defines custom functions for the template.
// TEMPLATE SPECIFIC FUNCTIONS. DO NOT EDIT THIS FILE DIRECTLY UNLESS YOU KNOW WHAT YOU'RE DOING!

// Template functions now use the XPT tag to differentiate them from functions I write for my own missions. --Superxpdude
class XPT
{
	class curator
	{
		file = "template\functions\curator";
		class curatorAddUnit {}; // Function to add an editable unit to all curators
		class curatorEH {postInit = 1;}; // Function for adding event handlers to curators on mission start
		class curatorGrpPlaced {}; // Function for adding curator placed groups to other curators
		class curatorObjPlaced {}; // Function for adding curator placed objects to other curators
		class curatorRemoveNVG {}; // Function for removing NVGs from curator-spawned units
	};
	class debug
	{
		file = "template\functions\debug";
		class debugCuratorFix {}; // Function to fix black screen in the curator interface
		class errorReport {}; // Function for handling error reporting
	};
	class event
	{
		file = "template\functions\event";
		class initPlayerLocal {}; // Template specific initPlayerLocal entries
		class initPlayerServer {}; // Template specific initPlayerServer entries
		class initServer {}; // Template specific initServer entries
		class onPlayerKilled {}; // Template specific onPlayerKilled entries
		class onPlayerRespawn {}; // Template specific onPlayerRespawn entries
	};
	class headlessClient
	{
		file = "template\functions\headlessClient";
		class headlessConnect {}; // Function for handling the headlessClient connecting
		class headlessDisconnect {}; // Function for handling the headlessClient disconnecting
		class headlessSetGroupOwner {}; // Function for moving groups to the headlessClient
		class headlessSetup {preInit = 1;}; // Function for setting up the headlessClient framework
	};
	class loadout
	{
		file = "template\functions\loadout";
		class loadCurrentInventory {}; // Uses loadInventory to apply a loadout to a unit
		class loadInventory {}; // Function for loading a unit's inventory
	};
	class radio
	{
		file = "template\functions\radio";
		class radioInit {preInit = 1;}; // Function for configuring radio settings
	};
	class stage
	{
		file = "template\functions\stage";
		class stageInit {preInit = 1;}; // Initialises the stage system
		class stageUpdate {}; // Updates the current stage. Handles changing between stages
	};
	class system
	{
		file = "template\functions\system";
		class briefingCreate {}; // Function to create briefings from a config file
		class briefingOnStart {postInit = 1;}; // Function to create mission briefings on mission start
		class curatorMenu {}; // Function for adding the briefing-based curator menu
		class fpsMarkers {postInit = 1;}; // Function to place FPS indicators on the map
		class mapMarkersClient {}; // Client-side portion of the map-markers module
		class mapMarkersServer {}; // Server-side portion of the map-markers module
		class updateTask {}; // Function for handling mission task updates
	};
};